@page "/changepassword"
@using REMS.Enititys
@inject UserService UserService
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor
@inject ISnackbar Snackbar
@using MudBlazor
<style>
    .user-card {
        padding: 20px;
        margin: 20px;
        transition: transform 0.3s ease-in-out;
    }

        .user-card:hover {
            transform: scale(1.05);
        }

</style>
<h3>تغيير كلمة السر</h3>
<MudPaper Elevation="4" Class="user-card" dir="rtl">

    <EditForm Model="changePasswordModel" OnValidSubmit="HandleChangePassword">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>كلمة السر الحالية:</label>
            <InputText @bind-Value="changePasswordModel.CurrentPassword" type="password" />
        </div>
        <div>
            <label>كلمة السر الجديدة:</label>
            <InputText @bind-Value="changePasswordModel.NewPassword" type="password" />
        </div>
        <button type="submit" Color="Color.Primary" Variant="Variant.Filled">تغيير كلمة السر</button>
    </EditForm>

</MudPaper>
@code {
    private ChangePasswordModel changePasswordModel = new ChangePasswordModel();

    private async Task HandleChangePassword()
    {
        try
        {
            var result = await UserService.ChangePasswordAsync(LoggedUserId, changePasswordModel.CurrentPassword, changePasswordModel.NewPassword);
            if (result.IsSuccess)
            {
                Navigation.NavigateTo("/user");
            }
        }
        catch(Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }

    private int LoggedUserId => Convert.ToInt32(HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(x => x.Type == "Id").Value);

    public class ChangePasswordModel
    {
        public string CurrentPassword { get; set; }
        public string NewPassword { get; set; }
    }
}
